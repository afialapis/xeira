{"version":3,"file":"t-bundle-esm.umd.bundle.js","sources":["../node_modules/farrapa-numbers/dist/farrapa-numbers.mjs","../node_modules/farrapa-collections/dist/farrapa-collections.mjs","../src/foo.mjs","../src/index.mjs"],"sourcesContent":["function asDecimal(n, d) {\n  if (isNaN(n)) n = parseFloat(0);\n  var f = d == undefined ? parseFloat(n) : parseFloat(n).toFixed(d);\n  var parts = f.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  return parts.join(\",\");\n}\n\nfunction asPrice(n) {\n  return asDecimal(n, 2);\n}\n\nfunction asPriceWithCurrency(n) {\n  return asPrice(n) + ' â‚¬';\n}\n\nfunction parseNum(n) {\n  var f = parseFloat(n);\n  if (isNaN(f)) return parseFloat(0);\n  return f;\n}\n\nexport { asDecimal, asPrice, asPriceWithCurrency, parseNum };\n","import { parseNum } from 'farrapa-numbers';\n\nfunction arrayChunk(myArray, chunk_size) {\n  var results = [];\n\n  while (myArray.length) {\n    results.push(myArray.splice(0, chunk_size));\n  }\n\n  return results;\n}\n\nfunction arraySum(a) {\n  return a.reduce((x, y) => x + y, 0);\n}\n\nfunction arrayRemove(a, element) {\n  var index = a.indexOf(element);\n\n  if (index > -1) {\n    return a.splice(index, 1);\n  }\n\n  return [];\n}\n\nfunction _deepGet(obj, path) {\n  return path.split('.').reduce(function (prev, curr) {\n    return prev ? prev[curr] : undefined;\n  }, obj || self);\n}\n\nfunction collMatches(coll, params) {\n  var fdata = coll.filter(d => {\n    var _pflds = Object.keys(params);\n\n    var valids = 0;\n    var eqs = 0;\n\n    for (var idx in _pflds) {\n      var fld = _pflds[idx];\n\n      if (d[fld] != undefined) {\n        valids += 1;\n\n        if (d[fld] == params[fld]) {\n          eqs += 1;\n        } else {\n          if (Array.isArray(params[fld])) {\n            if (params[fld].indexOf(d[fld]) >= 0) {\n              eqs += 1;\n            }\n          }\n        }\n      }\n    }\n\n    return eqs == valids;\n  });\n  return fdata;\n}\n\nfunction collSort(coll, by, order) {\n  if (by == undefined) {\n    return coll;\n  }\n\n  var ft = order == 'desc' ? -1 : 1;\n  return coll.slice().sort(function (a, b) {\n    /*\n    const fa = a[by].toLowerCase(), fb = b[by].toLowerCase()\n    if (fa < fb) //sort string ascending\n      return -1 * ft\n    if (fa > fb)\n      return 1 * ft\n    return 0 //default return value (no sorting)\n    */\n    //return (a[by]-b[by])*ft\n    var av, bv;\n\n    if (typeof by == 'object') {\n      av = _deepGet(a, by.field);\n      bv = _deepGet(b, by.field);\n      av = by.map[av] || '';\n      bv = by.map[bv] || '';\n    } else if (typeof by == 'function') {\n      av = by(a) || '';\n      bv = by(b) || '';\n    } else {\n      av = _deepGet(a, by);\n      bv = _deepGet(b, by);\n    }\n\n    if (typeof av == 'string' && typeof bv == 'string') {\n      av = av.toLowerCase();\n      bv = bv.toLowerCase();\n    }\n\n    if (av < bv) //sort string ascending\n      return -1 * ft;\n    if (av > bv) return 1 * ft;\n    return 0;\n  });\n}\n/*\nhttps://stackoverflow.com/a/10124053\n\n(function(){\n  if (typeof Object.defineProperty === 'function'){\n    try{Object.defineProperty(Array.prototype,'sortBy',{value:sb}); }catch(e){}\n  }\n  if (!Array.prototype.sortBy) Array.prototype.sortBy = sb;\n\n  function sb(f){\n    for (var i=this.length;i;){\n      var o = this[--i];\n      this[i] = [].concat(f.call(o,o,i),o);\n    }\n    this.sort(function(a,b){\n      for (var i=0,len=a.length;i<len;++i){\n        if (a[i]!=b[i]) return a[i]<b[i]?-1:1;\n      }\n      return 0;\n    });\n    for (var i=this.length;i;){\n      this[--i]=this[i][this[i].length-1];\n    }\n    return this;\n  }\n})();\n\n*/\n\n\nfunction collMaxBy(coll, fld) {\n  var m = -99999;\n  coll.map(c => {\n    if (c[fld] != undefined) m = Math.max(m, c[fld]);\n  });\n  return coll.find(c => c[fld] == m);\n}\n\nfunction collTotalBy(arr, field) {\n  var f = parseFloat(0);\n  arr.map(d => {\n    f += parseNum(d[field]);\n  });\n  return f;\n}\n\nexport { arrayChunk, arrayRemove, arraySum, collMatches, collMaxBy, collSort, collTotalBy };\n","function fooit(obj) {\n  obj.foo= 'bar'\n  return obj\n}\n\nexport {\n  fooit\n}","import {collTotalBy} from 'farrapa-collections'\nimport {fooit} from './foo.mjs'\n\nconst collections= [\n  fooit({\n    'id': 1,\n    'name': 'Max Power',\n    'age': 37,\n    'money': 99.99\n  }),\n  fooit({\n    'id': 2,\n    'name': 'Min Weak',\n    'age': 25,\n    'money': 33.33\n  })  \n]\n\nconst getMoney = () => {\n  const total= collTotalBy(collections, 'money')\n  return total\n};\n\n\nexport {\n  getMoney\n}\n"],"names":["fooit","obj","foo","collections","getMoney","total","collTotalBy"],"mappings":";;;;;;;;;;;;;;;;EAgBA,SAAS,QAAQ,CAAC,CAAC,EAAE;EACrB,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EACxB,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;EACrC,EAAE,OAAO,CAAC,CAAC;EACX;;EC0HA,SAAS,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE;EACjC,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EACxB,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI;EACf,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5B,GAAG,CAAC,CAAC;EACL,EAAE,OAAO,CAAC,CAAC;EACX;;ECpJA,SAASA,KAAT,CAAeC,GAAf,EAAoB;IAClBA,GAAG,CAACC,GAAJ,GAAS,KAAT,CAAA;EACA,EAAA,OAAOD,GAAP,CAAA;EACD;;ECAD,IAAME,WAAW,GAAE,CACjBH,KAAK,CAAC;EACJ,EAAA,IAAA,EAAM,CADF;EAEJ,EAAA,MAAA,EAAQ,WAFJ;EAGJ,EAAA,KAAA,EAAO,EAHH;IAIJ,OAAS,EAAA,KAAA;EAJL,CAAD,CADY,EAOjBA,KAAK,CAAC;EACJ,EAAA,IAAA,EAAM,CADF;EAEJ,EAAA,MAAA,EAAQ,UAFJ;EAGJ,EAAA,KAAA,EAAO,EAHH;IAIJ,OAAS,EAAA,KAAA;EAJL,CAAD,CAPY,CAAnB,CAAA;;AAeA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,EAAA,IAAMC,KAAK,GAAEC,WAAW,CAACH,WAAD,EAAc,OAAd,CAAxB,CAAA;EACA,EAAA,OAAOE,KAAP,CAAA;EACD;;;;;;;;;;"}